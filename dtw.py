# -*- coding: utf-8 -*-
"""DTW.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10YXYosNhjaQzyTJE_Janf2qMSSN1mJ-c
"""

import librosa
import scipy.io.wavfile as wav
import numpy as np
import matplotlib.pyplot as plt
import librosa.display

(rno,no) = wav.read("no.wav")
(ryes,yes) = wav.read("yes.wav")
(ryes2,yes2) = wav.read("yes2.wav")

no = np.array([float(x) for x in no])
yes = np.array([float(x) for x in yes])
yes2 = np.array([float(x) for x in yes2])

No = librosa.feature.chroma_cens(y=no, sr=rno)
Yes = librosa.feature.chroma_cens(y=yes, sr=ryes)
Yes2 = librosa.feature.chroma_cens(y=yes2, sr=ryes2)

plt.figure()
plt.subplot(2,1,1)
librosa.display.specshow(No, y_axis='chroma', x_axis='time')
plt.title('chroma_cens No')
plt.colorbar()
plt.subplot(2,1,2)
librosa.display.specshow(Yes, y_axis='chroma', x_axis='time')
plt.title('chroma_cens Yes')
plt.colorbar()
plt.tight_layout()
plt.show()

noise = np.random.rand(No.shape[0], 200)
Y = np.concatenate((No, Yes2, No), axis=1)

D, wp = librosa.sequence.dtw(Yes, Y, subseq=True)
plt.subplot(2, 1, 1)
librosa.display.specshow(D, x_axis='frames', y_axis='frames')
plt.title('Database excerpt')
plt.plot(wp[:, 1], wp[:, 0], label='Optimal path', color='y')
plt.legend()
plt.subplot(2, 1, 2)
plt.plot(D[-1, :] / wp.shape[0])
plt.xlim([0, Y.shape[1]])
plt.ylim([0, 2])
plt.title('Matching cost function')
plt.tight_layout()
plt.show()

print(min(D[-1,:])/wp.shape[0])

